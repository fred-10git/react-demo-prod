{"version":3,"file":"static/js/PageMovies.15f20802.chunk.js","mappings":"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","sources":["features/movies/components/movie-details/MovieDetails.js","webpack://02_projet_films/./src/features/movies/components/movie-list/movie/Movie.module.scss?5857","features/movies/components/movie-list/movie/Movie.js","features/movies/components/movie-list/MovieList.js","features/movies/components/search-bar/SearchBar.js","features/movies/index.js","store/movies/movies.selectors.js","store/favorites/favorites.selectors.js"],"sourcesContent":["import React, { Component } from \"react\";\r\n\r\nexport default class MovieDetails extends Component {\r\n  render() {\r\n    const { movie } = this.props;\r\n    return (\r\n      <>\r\n      { movie &&  (\r\n      <div className=\"w-25 bg-light p-4 d-flex flex-column sticky-top\">\r\n        <div className=\"p-4 sticky-top\">\r\n          <h5>{movie.title }</h5>\r\n          <hr className=\"w-100\" />\r\n          <div>\r\n            <img height=\"400\" className=\"d-block mx-auto h-250\" src={movie.img} alt=\"poster\" />\r\n          </div>\r\n          <hr className=\"w-100\" />\r\n          <p className=\"text-secondary mb-3\">{movie.details}</p>\r\n          <span>{movie.description}</span>\r\n        </div>\r\n      </div>\r\n        )}\r\n        </>\r\n    );\r\n  }\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Movie_container__jVGG6\",\"image\":\"Movie_image__v7+Py\"};","import React, { Component } from \"react\";\r\nimport Style from \"./Movie.module.scss\";\r\n\r\nexport default class Movie extends Component {\r\n  mouseEnter = () => {\r\n    this.props.updateSelectedMovie(this.props.movie.title);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div onClick={this.mouseEnter} className={\"d-flex bg-light \" + Style.container}>\r\n        <div className={Style.image}>\r\n          <img src={this.props.movie.img} alt=\"poster-film\" />\r\n        </div>\r\n        <div className=\"d-flex flex-fill flex-column p-3\">\r\n          <h5>{this.props.movie.title}</h5>\r\n          <hr className=\"w-100\" />\r\n          <p className=\"flex-fill\">{this.props.movie.details}</p>\r\n          <div className=\"d-flex flex-row justify-content-end\">\r\n            {this.props.isFavorite ? (\r\n              <button onClick={() => this.props.removeFavorite(this.props.movie.id)} className=\"btn btn-small btn-danger\">\r\n                Supprimer\r\n              </button>\r\n            ) : (\r\n              <button onClick={() => this.props.addFavorite(this.props.movie)} className=\"btn btn-small btn-primary\">\r\n                Ajouter\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Movie from \"./movie/Movie\";\r\n\r\nexport default class MovieList extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"w-75 p-4 border d-flex flex-row flex-wrap justify-content-center\">\r\n        {this.props.movies.map((item, index) => (\r\n          <Movie\r\n            key={item.id}\r\n            movie={item}\r\n            isFavorite={this.props.favorites.indexOf(item.id) !== -1}\r\n            addFavorite={this.props.addFavorite}\r\n            removeFavorite={this.props.removeFavorite}\r\n            updateSelectedMovie={() => this.props.updateSelectedMovie(index)}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Formik } from \"formik\";\r\n\r\nexport default class SearchBar extends Component {\r\n  submit = (values, actions) => {\r\n    // const queryStr =\r\n    //   \"?\" +\r\n    //   Object.keys(values)\r\n    //     .map((item) => `${item}=${values[item]}&`)\r\n    //     .join(\"\");\r\n\r\n    this.props.fetchMovies(values).then(() => actions.setSubmitting(false));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Formik onSubmit={this.submit} initialValues={{ query: \"\", language: \"fr-FR\" }}>\r\n        {({ handleSubmit, handleChange, handleBlur, isSubmitting }) => (\r\n          <form className=\"d-flex flex-row p-2 m-2\" onSubmit={handleSubmit}>\r\n            <input\r\n              name=\"query\"\r\n              className=\"flex-fill form-control mx-2\"\r\n              placeholder=\"Titre du film ... \"\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n            />\r\n            <select className=\"form-control w-25 mx-2\" name=\"language\" onChange={handleChange} onBlur={handleBlur}>\r\n              <option value=\"fr-FR\">Fran√ßais</option>\r\n              <option value=\"en-US\">Anglais</option>\r\n            </select>\r\n            <button className=\"btn btn-small btn-success\" type=\"submit\" disabled={isSubmitting}>\r\n              Rechercher\r\n            </button>\r\n          </form>\r\n        )}\r\n      </Formik>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { MovieList, MovieDetails, SearchBar } from \"./components\";\r\nimport Loading from \"../../components/utils/Loading\";\r\nimport { connect } from \"react-redux\";\r\nimport { favoritesListIdSelector, moviesIsLoadingSelector, moviesListSelector, moviesSelectedSelector } from \"../../store/selectors\";\r\nimport { fetchMovies, setSelectedMovie, tryAddFavorite, tryRemoveFavorite } from \"../../store/actions\";\r\n\r\nconst PageMovies = (props) => {\r\n  return (\r\n    <>\r\n      <SearchBar fetchMovies={props.fetchMovies} />\r\n      {!props.isLoading ? (\r\n        <div className=\"d-flex flex-row flex-fill pt-4 p-2\">\r\n          <MovieList\r\n            movies={props.movies}\r\n            updateSelectedMovie={props.setSelectedMovie}\r\n            favorites={props.favoritesIds}\r\n            addFavorite={props.tryAddFavorite}\r\n            removeFavorite={props.tryRemoveFavorite}\r\n          />\r\n          <MovieDetails movie={props.selectedMovie} />\r\n        </div>\r\n      ) : (\r\n        <Loading />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  (state) => ({\r\n    isLoading: moviesIsLoadingSelector(state),\r\n    movies: moviesListSelector(state),\r\n    favoritesIds: favoritesListIdSelector(state),\r\n    selectedMovie: moviesSelectedSelector(state),\r\n  }),\r\n  {\r\n    fetchMovies,\r\n    setSelectedMovie,\r\n    tryAddFavorite,\r\n    tryRemoveFavorite,\r\n  },\r\n)(PageMovies);\r\n","import { createSelector } from \"reselect\";\r\n\r\nexport const moviesSelector = (state) => state.movies;\r\n\r\nexport const moviesIsLoadingSelector = createSelector([moviesSelector], (movies) => movies.isLoading);\r\nexport const moviesListSelector = createSelector([moviesSelector], (movies) => movies.data);\r\nexport const moviesSelectedIndexSelector = createSelector([moviesSelector], (movies) => movies.selectedMovie);\r\n\r\nexport const moviesSelectedSelector = createSelector([moviesListSelector, moviesSelectedIndexSelector], (movies, index) => movies[index]);\r\n","import { createSelector } from 'reselect';\r\n\r\n\r\nexport const favoritesSelector = state => state.favorites;\r\nexport const favoritesListSelector = createSelector( [favoritesSelector], favorites => favorites.data );\r\nexport const favoritesIsLoadingSelector = createSelector([favoritesSelector], (favorites) => favorites.isLoading);\r\n\r\nexport const favoritesListIdSelector =  createSelector([favoritesListSelector], favorites =>  favorites.map( item => item.id));\r\n\r\n"],"names":["MovieDetails","movie","this","props","className","title","height","src","img","alt","details","description","Component","Movie","mouseEnter","updateSelectedMovie","onClick","Style","isFavorite","removeFavorite","id","addFavorite","MovieList","movies","map","item","index","favorites","indexOf","SearchBar","submit","values","actions","fetchMovies","then","setSubmitting","onSubmit","initialValues","query","language","handleSubmit","handleChange","handleBlur","isSubmitting","name","placeholder","onChange","onBlur","value","type","disabled","connect","state","isLoading","moviesIsLoadingSelector","moviesListSelector","favoritesIds","favoritesListIdSelector","selectedMovie","moviesSelectedSelector","setSelectedMovie","tryAddFavorite","tryRemoveFavorite","Loading","moviesSelector","createSelector","data","moviesSelectedIndexSelector","favoritesSelector","favoritesListSelector","favoritesIsLoadingSelector"],"sourceRoot":""}