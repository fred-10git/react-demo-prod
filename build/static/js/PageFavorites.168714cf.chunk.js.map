{"version":3,"file":"static/js/PageFavorites.168714cf.chunk.js","mappings":"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","sources":["webpack://02_projet_films/./src/features/favorites/components/favorites-list/favorites/Favorite.module.scss?b1aa","features/favorites/components/favorites-list/favorites/Favorite.js","features/favorites/components/favorites-list/FavoritesList.js","features/favorites/index.js","store/movies/movies.selectors.js","store/favorites/favorites.selectors.js","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Favorite_container__4jKLa\",\"image\":\"Favorite_image__XRRBf\"};","import React, { Component } from \"react\";\r\nimport Style from \"./Favorite.module.scss\";\r\n\r\nexport default class Favorite extends Component {\r\n\r\n  render() {\r\n    const { favorite } = this.props;\r\n    return (\r\n      <div className={\"d-flex bg-light \" + Style.container}>\r\n        <div className={Style.image}>\r\n          <img src={favorite.img} alt=\"poster-film\" />\r\n        </div>\r\n        <div className=\"d-flex d-fill flex-column p-3\">\r\n          <h5>{favorite.title}</h5>\r\n          <hr className=\"w-100\" />\r\n          <p className=\"flex-fill\">{favorite.details}</p>\r\n          <div className=\"d-flex flex-row justify-content-end\">\r\n              <button onClick={ this.props.removeFavorite } className=\"btn btn-small btn-danger\">\r\n                Supprimer\r\n              </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Favorite from \"./favorites/Favorite\";\r\n\r\nexport default class FavoritesList extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"w-100 p-4 border d-flex flex-row flex-wrap justify-content-center align-content-start\">\r\n        {this.props.favorites.map((item, index) => (\r\n          <Favorite key={item.id} favorite={item} \r\n                    removeFavorite={ () => this.props.removeFavorite(item.id) } />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { FavoritesList } from './components/';\r\nimport Loading from \"../../components/utils/Loading\";\r\nimport { favoritesListSelector, favoritesIsLoadingSelector } from \"../../store/selectors\";\r\nimport { tryRemoveFavorite } from '../../store/actions';\r\nimport { connect } from 'react-redux';\r\n\r\nconst PageFavorites = (props) => {\r\n\r\n // console.log(\"FAVORITS : \", props.favorites);\r\n\r\n    return (\r\n      <>\r\n      { !props.isLoading  ? (\r\n        <div className=\"d-flex flex-row flex-fill pt-4 p-2\">\r\n        <FavoritesList\r\n          favorites={props.favorites}\r\n          removeFavorite={props.tryRemoveFavorite}\r\n        />\r\n        </div>\r\n      ) : (\r\n        <Loading />\r\n      )}\r\n      </> \r\n    );\r\n}\r\n\r\nexport default connect(\r\n  (state) => ({\r\n    favorites: favoritesListSelector(state),\r\n    isLoading: favoritesIsLoadingSelector(state),\r\n  }),\r\n  {\r\n    tryRemoveFavorite,\r\n  },\r\n)(PageFavorites);","import { createSelector } from \"reselect\";\r\n\r\nexport const moviesSelector = (state) => state.movies;\r\n\r\nexport const moviesIsLoadingSelector = createSelector([moviesSelector], (movies) => movies.isLoading);\r\nexport const moviesListSelector = createSelector([moviesSelector], (movies) => movies.data);\r\nexport const moviesSelectedIndexSelector = createSelector([moviesSelector], (movies) => movies.selectedMovie);\r\n\r\nexport const moviesSelectedSelector = createSelector([moviesListSelector, moviesSelectedIndexSelector], (movies, index) => movies[index]);\r\n","import { createSelector } from 'reselect';\r\n\r\n\r\nexport const favoritesSelector = state => state.favorites;\r\nexport const favoritesListSelector = createSelector( [favoritesSelector], favorites => favorites.data );\r\nexport const favoritesIsLoadingSelector = createSelector([favoritesSelector], (favorites) => favorites.isLoading);\r\n\r\nexport const favoritesListIdSelector =  createSelector([favoritesListSelector], favorites =>  favorites.map( item => item.id));\r\n\r\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function () {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function () {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};"],"names":["Favorite","favorite","this","props","className","Style","src","img","alt","title","details","onClick","removeFavorite","Component","FavoritesList","favorites","map","item","index","id","connect","state","favoritesListSelector","isLoading","favoritesIsLoadingSelector","tryRemoveFavorite","Loading","moviesSelector","movies","moviesIsLoadingSelector","createSelector","moviesListSelector","data","moviesSelectedIndexSelector","selectedMovie","moviesSelectedSelector","favoritesSelector","favoritesListIdSelector","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations"],"sourceRoot":""}